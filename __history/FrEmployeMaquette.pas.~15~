<<<<<<< HEAD
unit FrEmployeMaquetteEval;
=======
unit FrEmployeMaquette;
>>>>>>> modifsBilly

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, 
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
<<<<<<< HEAD
  FMX.Layouts, FMX.Controls.Presentation, FMX.Objects;

type
  TemployeMaquetteEval = class(TFrame)
    elementEmploye: TRectangle;
    photoEmploye: TImage;
    nomEmploye: TLabel;
    pointEmploye: TLabel;
=======
  FMX.Layouts, FMX.Controls.Presentation, FMX.Objects, FMX.Ani;

type
  TemployeMaquette = class(TFrame)
    elementEmploye: TRectangle;
    photoEmploye: TImage;
    nomEmploye: TLabel;
    posteEmploye: TLabel;
>>>>>>> modifsBilly
    performanceEmploye: TFlowLayout;
    Image2: TImage;
    Image3: TImage;
    Image4: TImage;
    Image5: TImage;
    Image6: TImage;
<<<<<<< HEAD
    identifiant: TLabel;
=======
    modification: TLayout;
    edition: TImage;
    suppression: TImage;
    identifiant: TLabel;
    ColorAnimation1: TColorAnimation;
    procedure elementEmployeResize(Sender: TObject);
>>>>>>> modifsBilly
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

implementation

{$R *.fmx}

<<<<<<< HEAD
=======
procedure TemployeMaquette.elementEmployeResize(Sender: TObject);
var
  diffIdent,
  diffNomP,
  diffPost,
  diffPerf: Single;

  identPos, nomPrPos, postPos, perfPos : Single;
begin

diffIdent := 4.25831;
diffNomP := 9.7786;
diffPost := 16.0482;
diffPerf := 22.9395;

identPos := 70.81168;
nomPrPos := 177.3935;
postPos := 352.8245;
perfPos := 530.955;

if (elementEmploye.Width < 782) and (elementEmploye.Width > 752) then
begin
  identifiant.Position.X := identPos - diffIdent;
  nomEmploye.Position.X := nomPrPos - diffNomP;
  posteEmploye.Position.X := postPos - diffPost;
  performanceEmploye.Position.X := perfPos - diffPerf;
end;

if (elementEmploye.Width < 752) and (elementEmploye.Width > 722) then
begin
  identifiant.Position.X := identPos - (diffIdent * 2);
  nomEmploye.Position.X := nomPrPos - (diffNomP * 2);
  posteEmploye.Position.X := postPos - (diffPost * 2);
  performanceEmploye.Position.X := perfPos - (diffPerf * 2);
end;

if (elementEmploye.Width < 722) and (elementEmploye.Width > 692) then
begin
  identifiant.Position.X := identPos - (diffIdent * 3);
  nomEmploye.Position.X := nomPrPos - (diffNomP * 3);
  posteEmploye.Position.X := postPos - (diffPost * 3);
  performanceEmploye.Position.X := perfPos - (diffPerf * 3);
end;

if (elementEmploye.Width < 692) and (elementEmploye.Width > 662) then
begin
  identifiant.Position.X := identPos - (diffIdent * 4);
  nomEmploye.Position.X := nomPrPos - (diffNomP * 4);
  posteEmploye.Position.X := postPos - (diffPost * 4);
  performanceEmploye.Position.X := perfPos - (diffPerf * 4);
end;

if (elementEmploye.Width < 662) and (elementEmploye.Width > 632) then
begin
  identifiant.Position.X := identPos - (diffIdent * 5);
  nomEmploye.Position.X := nomPrPos - (diffNomP * 5);
  posteEmploye.Position.X := postPos - (diffPost * 5);
  performanceEmploye.Position.X := perfPos - (diffPerf * 5);
end;

if (elementEmploye.Width < 632) then
begin
  identifiant.Position.X := identPos - (diffIdent * 6);
  nomEmploye.Position.X := nomPrPos - (diffNomP * 6);
  posteEmploye.Position.X := postPos - (diffPost * 6);
  performanceEmploye.Position.X := perfPos - (diffPerf * 6);
end;

if elementEmploye.Width <= 669 then
  nomEmploye.Width := 130
else
  nomEmploye.Width := 155;

end;
>>>>>>> modifsBilly



end.
